#!/bin/bash
# -*- coding: utf-8, tab-width: 2 -*-


function devdock_recompose () {
  exec </dev/null
  local C_DIR="$(dirname -- "$COMPOSE_FILE")"
  mkdir --parents -- "$C_DIR"
  local C_DEST="$COMPOSE_FILE"
  local C_TMP="$C_DIR/tmp.next.$(basename -- "$C_DEST")"

  local DOCO_VER='3'
  local C_GEN="%YAML 1.1
    # -*- coding: UTF-8 -*-
    ---

    # This file is automatically generated by devdock.
    # Any manual edits will probably be lost some time soon.

    version: '$DOCO_VER'
    "
  C_GEN="$(sed -re 's!^\s+!!' <<<"$C_GEN")"$'\n\n'

  local -A CFG=()
  local -A ENV_SECRETS=()
  local ITEM=
  for ITEM in {config,cfg@$HOSTNAME,secrets}/*.rc; do
    [ -f "$ITEM" ] || continue
    devdock_source_in_func "$ITEM" || return $?$(
      echo "E: Failed to source $ITEM" >&2)
  done
  [ "${#ENV_SECRETS[@]}" == 0 ] || return 4$(
    echo "E: Your project uses the deprecated ENV_SECRETS feature." >&2)

  local -A DOCO_SECTIONS=()
  for ITEM in enabled/*.yaml; do
    devdock_recompose__one_enab_file "$ITEM" || return $?
  done
  devdock_recompose__append_doco_sections || return $?
  C_GEN+=$'\n...'

  local C_HAVE="$([ -f "$C_DEST" ] && cat -- "$C_DEST")"
  if [ "$C_GEN" == "$C_HAVE" ]; then
    echo "D: compose file already is up-to-date: $C_DEST"
    return 0
  fi

  local CANT="E: Cannot = temporary file $C_TMP"
  >"$C_TMP" || return 5$(echo "${CANT/=/create}" >&2)
  chmod a=,u=rw -- "$C_TMP" || return 5$(echo "${CANT/=/chmod}" >&2)
  echo "$C_GEN" >"$C_TMP" || return 5$(echo "${CANT/=/write}" >&2)
  COMPOSE_FILE="$C_TMP" docompose config >/dev/null || return 5$(
    echo "${CANT/=/validate syntax of}" >&2)
  mv --no-target-directory \
    -- "$C_TMP" "$C_DEST" || return 5$(echo "${CANT/=/activate}" >&2)
  chmod a-w -- "$C_DEST" || return 5$(
    echo "E: Cannot write-protect compose file $C_DEST" >&2)

  echo "D: compose file was updated: $C_DEST"
}


return 0
